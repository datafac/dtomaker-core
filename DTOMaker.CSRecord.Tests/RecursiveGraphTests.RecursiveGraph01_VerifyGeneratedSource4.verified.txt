// <auto-generated>
// This file was generated by DTOMaker.CSRecord.
// NuGet: https://www.nuget.org/packages/DTOMaker.CSRecord
// Warning: Changes made to this file will be lost if re-generated.
// </auto-generated>
#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required
#nullable enable
using DataFac.Memory;
using DTOMaker.Runtime;
using DTOMaker.Runtime.CSRecord;
using System;

#if NET8_0_OR_GREATER
namespace MyOrg.Models.CSRecord
{
    public partial record NumericNode : MyOrg.Models.CSRecord.Node, INumericNode, IEquatable<NumericNode>
    {
        // Derived entities: 2
        // - DoubleNode
        // - Int64Node

        public new const int EntityId = 3;

        private static readonly NumericNode _empty = new NumericNode();
        public static new NumericNode Empty => _empty;

        public new static NumericNode CreateFrom(NumericNode source)
        {
            if (source.IsFrozen) return source;
            return source switch
            {
                MyOrg.Models.CSRecord.DoubleNode source2 => new MyOrg.Models.CSRecord.DoubleNode(source2),
                MyOrg.Models.CSRecord.Int64Node source2 => new MyOrg.Models.CSRecord.Int64Node(source2),
                _ => new MyOrg.Models.CSRecord.NumericNode(source)
            };
        }

        public new static NumericNode CreateFrom(MyOrg.Models.INumericNode source)
        {
            if (source is NumericNode concrete && concrete.IsFrozen) return concrete;
            return source switch
            {
                MyOrg.Models.IDoubleNode source2 => new MyOrg.Models.CSRecord.DoubleNode(source2),
                MyOrg.Models.IInt64Node source2 => new MyOrg.Models.CSRecord.Int64Node(source2),
                _ => new MyOrg.Models.CSRecord.NumericNode(source)
            };
        }

        protected override int OnGetEntityId() => EntityId;

        public NumericNode() { }
        public NumericNode(INumericNode source) : base(source)
        {
        }

    }
}
#else
#warning This template targets .NET 8.0+
#endif
