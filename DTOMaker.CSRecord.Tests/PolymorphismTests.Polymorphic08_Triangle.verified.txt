// <auto-generated>
// This file was generated by DTOMaker.CSRecord.
// NuGet: https://www.nuget.org/packages/DTOMaker.CSRecord
// Warning: Changes made to this file will be lost if re-generated.
// </auto-generated>
#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required
#nullable enable
using DataFac.Memory;
using DTOMaker.Runtime;
using DTOMaker.Runtime.CSRecord;
using System;

#if NET8_0_OR_GREATER
namespace MyOrg.Models.CSRecord
{
    public partial record class Triangle : MyOrg.Models.CSRecord.Polygon, ITriangle, IEquatable<Triangle>
    {
        // Derived entities: 2
        // - Equilateral
        // - RightTriangle

        private static readonly Triangle _empty = new Triangle();
        public static new Triangle Empty => _empty;

        protected override int OnGetEntityId() => 2;

        public new static Triangle CreateFrom(Triangle source)
        {
            if (source.IsFrozen) return source;
            return source switch
            {
                MyOrg.Models.CSRecord.Equilateral source2 => new MyOrg.Models.CSRecord.Equilateral(source2),
                MyOrg.Models.CSRecord.RightTriangle source2 => new MyOrg.Models.CSRecord.RightTriangle(source2),
                _ => new MyOrg.Models.CSRecord.Triangle(source)
            };
        }

        public new static Triangle CreateFrom(MyOrg.Models.ITriangle source)
        {
            if (source is Triangle concrete && concrete.IsFrozen) return concrete;
            return source switch
            {
                MyOrg.Models.IEquilateral source2 => new MyOrg.Models.CSRecord.Equilateral(source2),
                MyOrg.Models.IRightTriangle source2 => new MyOrg.Models.CSRecord.RightTriangle(source2),
                _ => new MyOrg.Models.CSRecord.Triangle(source)
            };
        }

        public Triangle() { }
        public Triangle(ITriangle source) : base(source)
        {
        }

    }
}
#else
#warning This template targets .NET 8.0+
#endif
